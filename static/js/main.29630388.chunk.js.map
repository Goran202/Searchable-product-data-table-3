{"version":3,"sources":["components/SearchBar.js","components/ListItemCategory.js","components/ItemSingleRow.js","components/ListItem.js","components/List.js","components/data.js","components/checkBox.js","components/Search.js","App.js","index.js"],"names":["SearchBar","value","onChange","type","ListItemCategory","listItem","category","ITemSingleRow","props","stocked","name","price","style","color","ListITem","renderCategory","ItemSingleRow","List","data","filterValue","inStockCondition","lastCategoryName","map","includes","ListItem","CheckBox","handleClick","onClick","Search","state","handleFilter","e","setState","target","checked","this","Component","App","ReactDOM","render","document","getElementById"],"mappings":"+RAkBeA,EAfG,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OAChB,oCACE,6BACE,8BACE,2BAAOC,KAAK,OAAOF,MAAOA,EAAOC,SAAUA,QCMpCE,EAVU,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OAAkB,2BAAIA,EAASC,WCiBzCC,EAjBO,SAACC,GAAW,IACxBH,EAAaG,EAAbH,SACAI,EAAyBJ,EAAzBI,QAASC,EAAgBL,EAAhBK,KAAMC,EAAUN,EAAVM,MACvB,OACE,uBAAGC,MAAOH,EAAU,CAAEI,MAAO,QAAW,CAAEA,MAAO,QAAjD,UAA8DH,EAA9D,cAAwEC,KCiB7DG,EAnBE,SAAC,GAAD,IAAGT,EAAH,EAAGA,SAAUU,EAAb,EAAaA,eAAb,OACf,qCACsB,IAAnBA,EAA0B,kBAAC,EAAD,CAAkBV,SAAUA,IAAe,GACtE,4BACE,kBAACW,EAAD,CAAeJ,MAAO,CAAEC,MAAO,OAASR,SAAUA,OC6BzCY,EAlCF,SAAC,GAA6C,IAA3CC,EAA0C,EAA1CA,KAAMC,EAAoC,EAApCA,YAAaC,EAAuB,EAAvBA,iBAC7BC,EAAmB,GACnBN,GAAiB,EACrB,OACE,oCACE,2CACA,4BACGG,EAAKI,IAAI,SAACjB,GACT,OACEA,EAASK,KAAKa,SAASJ,IACrBC,IAAoBf,EAASI,QAM1B,MAJLM,EAAiBV,EAASC,WAAae,EACvCA,EAAmBhB,EAASC,SACrB,kBAACkB,EAAD,CAAUnB,SAAUA,EAAUU,eAAgBA,UCqBlDG,EAvCF,CACX,CACEZ,SAAU,iBACVK,MAAO,SACPF,SAAS,EACTC,KAAM,YAER,CACEJ,SAAU,iBACVK,MAAO,QACPF,SAAS,EACTC,KAAM,YAER,CACEJ,SAAU,iBACVK,MAAO,SACPF,SAAS,EACTC,KAAM,cAER,CACEJ,SAAU,cACVK,MAAO,SACPF,SAAS,EACTC,KAAM,cAER,CACEJ,SAAU,cACVK,MAAO,UACPF,SAAS,EACTC,KAAM,YAER,CACEJ,SAAU,cACVK,MAAO,UACPF,SAAS,EACTC,KAAM,YCnBKe,EAbE,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAH,OACf,oCACE,2BACE,2BAAOvB,KAAK,WAAWwB,QAASD,IADlC,iCC4BWE,E,2MA1BbC,MAAQ,CACNV,YAAa,GACbC,kBAAkB,G,EAGpBU,aAAe,SAACC,GACd,EAAKC,SAAS,CAAEb,YAAaY,EAAEE,OAAOhC,S,EAGxCyB,YAAc,SAACK,GACb,EAAKC,SAAS,CAAEZ,iBAAkBW,EAAEE,OAAOC,W,wEAGnC,IACAf,EAAgBgB,KAAKN,MAArBV,YACAC,EAAqBe,KAAKN,MAA1BT,iBACR,OACE,oCACE,kBAAC,EAAD,CAAWlB,SAAUiC,KAAKL,eAC1B,kBAAC,EAAD,CAAUJ,YAAaS,KAAKT,cAC5B,kBAAC,EAAD,CAAMR,KAAMA,EAAMC,YAAaA,EAAaC,iBAAkBA,S,GArBjDgB,aCENC,MAJf,WACE,OAAO,kBAAC,EAAD,OCATC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.29630388.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst SearchBar = ({ value, onChange }) => (\r\n  <>\r\n    <div>\r\n      <form>\r\n        <input type=\"text\" value={value} onChange={onChange} />\r\n      </form>\r\n    </div>\r\n  </>\r\n);\r\n\r\nSearchBar.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default SearchBar;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ListItemCategory = ({ listItem }) => <p>{listItem.category}</p>;\r\n\r\nListItemCategory.propTypes = {\r\n  listItem: PropTypes.shape({\r\n    category: PropTypes.string,\r\n    price: PropTypes.string,\r\n    stocked: PropTypes.bool,\r\n    name: PropTypes.string,\r\n  }).isRequired,\r\n};\r\nexport default ListItemCategory;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ITemSingleRow = (props) => {\r\n  const { listItem } = props;\r\n  const { stocked, name, price } = listItem;\r\n  return (\r\n    <p style={stocked ? { color: 'blue' } : { color: 'red' }}>{`${name}   ${price}`}</p>\r\n  );\r\n};\r\n\r\nITemSingleRow.propTypes = {\r\n  listItem: PropTypes.shape({\r\n    category: PropTypes.string,\r\n    price: PropTypes.string,\r\n    stocked: PropTypes.bool,\r\n    name: PropTypes.string,\r\n  }).isRequired,\r\n};\r\n\r\nexport default ITemSingleRow;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ListItemCategory from './ListItemCategory';\r\nimport ItemSingleRow from './ItemSingleRow';\r\n\r\nconst ListITem = ({ listItem, renderCategory }) => (\r\n  <>\r\n    {renderCategory === true ? <ListItemCategory listItem={listItem} /> : ''}\r\n    <ul>\r\n      <ItemSingleRow style={{ color: 'red' }} listItem={listItem} />\r\n    </ul>\r\n  </>\r\n);\r\n\r\nListITem.propTypes = {\r\n  listItem: PropTypes.shape({\r\n    category: PropTypes.string,\r\n    price: PropTypes.string,\r\n    stocked: PropTypes.bool,\r\n    name: PropTypes.string,\r\n  }).isRequired,\r\n  renderCategory: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default ListITem;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ListItem from './ListItem';\r\n\r\nconst List = ({ data, filterValue, inStockCondition }) => {\r\n  let lastCategoryName = '';\r\n  let renderCategory = true;\r\n  return (\r\n    <>\r\n      <h1>Name Price </h1>\r\n      <ul>\r\n        {data.map((listItem) => {\r\n          if (\r\n            listItem.name.includes(filterValue) &&\r\n            (!inStockCondition || listItem.stocked)\r\n          ) {\r\n            renderCategory = listItem.category !== lastCategoryName;\r\n            lastCategoryName = listItem.category;\r\n            return <ListItem listItem={listItem} renderCategory={renderCategory} />;\r\n          }\r\n          return null;\r\n        })}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nList.propTypes = {\r\n  data: PropTypes.arrayOf({\r\n    category: PropTypes.string,\r\n    price: PropTypes.string,\r\n    stocked: PropTypes.bool,\r\n    name: PropTypes.string,\r\n  }).isRequired,\r\n  filterValue: PropTypes.string.isRequired,\r\n  inStockCondition: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default List;\r\n","const data = [\r\n  {\r\n    category: 'Sporting Goods',\r\n    price: '$49.99',\r\n    stocked: true,\r\n    name: 'Football',\r\n  },\r\n  {\r\n    category: 'Sporting Goods',\r\n    price: '$9.99',\r\n    stocked: true,\r\n    name: 'Baseball',\r\n  },\r\n  {\r\n    category: 'Sporting Goods',\r\n    price: '$29.99',\r\n    stocked: false,\r\n    name: 'Basketball',\r\n  },\r\n  {\r\n    category: 'Electronics',\r\n    price: '$99.99',\r\n    stocked: true,\r\n    name: 'iPod Touch',\r\n  },\r\n  {\r\n    category: 'Electronics',\r\n    price: '$399.99',\r\n    stocked: false,\r\n    name: 'iPhone 5',\r\n  },\r\n  {\r\n    category: 'Electronics',\r\n    price: '$199.99',\r\n    stocked: true,\r\n    name: 'Nexus 7',\r\n  },\r\n];\r\n\r\nexport default data;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst CheckBox = ({ handleClick }) => (\r\n  <>\r\n    <p>\r\n      <input type=\"checkbox\" onClick={handleClick} />\r\n      Only show products in stock\r\n    </p>\r\n  </>\r\n);\r\n\r\nCheckBox.propTypes = {\r\n  handleClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default CheckBox;\r\n","import React, { Component } from 'react';\r\nimport SearchBar from './SearchBar';\r\nimport List from './List';\r\nimport data from './data';\r\nimport CheckBox from './checkBox';\r\n\r\nclass Search extends Component {\r\n  state = {\r\n    filterValue: '',\r\n    inStockCondition: false,\r\n  };\r\n\r\n  handleFilter = (e) => {\r\n    this.setState({ filterValue: e.target.value });\r\n  };\r\n\r\n  handleClick = (e) => {\r\n    this.setState({ inStockCondition: e.target.checked });\r\n  };\r\n\r\n  render() {\r\n    const { filterValue } = this.state;\r\n    const { inStockCondition } = this.state;\r\n    return (\r\n      <>\r\n        <SearchBar onChange={this.handleFilter} />\r\n        <CheckBox handleClick={this.handleClick} />\r\n        <List data={data} filterValue={filterValue} inStockCondition={inStockCondition} />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Search;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport Search from './components/Search';\r\n\r\nfunction App() {\r\n  return <Search />;\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}